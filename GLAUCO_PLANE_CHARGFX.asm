;----------------------------------------------------------
;		CHARACTER CODES TO BUILD OUR PATTERN
;
;		THE CODE IS IN THE FORMAT $NNNN
;
;		THE LAST TWO NUMBERS ($00NN) REFER TO THE CHARACTER NUMBER IN VRAM TO USE
;		(THE CHARACTER NUMBER IS THE VRAM ADDRESS DIVIDED BY 32 (OR DIVIDED BY $20 HEXADECIMAL))
;
;		IF THE FIRST NUMBER  ($N000) IS '1' IT MEANS MIRROR THE CHARACTER VERTICALLY
;		IF THE SECOND NUMBER ($0N00) IS '8' IT MEANS MIRROR THE CHARACTER HORIZONTALLY
;
;		SO WHEN WE HAVE A DIAGONAL CHARACTER LINE THIS - / WE CAN MIRROR IT TO GET THIS \
;		SO WE CAN BUILD THIS - /\
;				       \/   USING ONE DIAGONAL AND MIRRORING
;----------------------------------------------------------
CHARGFX:
		DC.W	$1804,$1802,$1803,$0001,$0801,$1003,$1002,$1004
		DC.W	$0000,$0000,$0000,$0004,$0804,$0800,$0800,$0800
		DC.W	$1000,$1000,$1000,$1004,$1804,$1800,$1800,$1800
		DC.W	$0804,$0802,$0803,$1001,$1801,$0003,$0002,$0004

;		DC.W	$0000,$0001,$0002,$0003,$0004,$0005,$0006,$0007,$0008,$0009,$000A,$000B,$000C,$000D,$000E,$000F
;		DC.W	$0010,$0011,$0012,$0013,$0014,$0015,$0016,$0017,$0018,$0019,$001A,$001B,$001C,$001D,$001E,$001F
;		DC.W	$0020,$0021,$0022,$0023,$0024,$0025,$0026,$0027,$0028,$0029,$002A,$002B,$002C,$002D,$002E,$002F
;		DC.W	$0030,$0031,$0032,$0033,$0034,$0035,$0036,$0037,$0038,$0039,$003A,$003B,$003C,$003D,$003E,$003F
;		DC.W	$0040,$0041,$0042,$0043,$0044,$0045,$0046,$0047,$0048,$0049,$004A,$004B,$004C,$004D,$004E,$004F
;		DC.W	$0050,$0051,$0052,$0053,$0054,$0055,$0056,$0057,$0058,$0059,$005A,$005B,$005C,$005D,$005E,$005F
;		DC.W	$0060,$0061,$0062,$0063,$0064,$0065,$0066,$0067,$0068,$0069,$006A,$006B,$006C,$006D,$006E,$006F
;		DC.W	$0070,$0071,$0072,$0073,$0074,$0075,$0076,$0077,$0078,$0079,$007A,$007B,$007C,$007D,$007E,$007F
;		DC.W	$0080,$0081,$0082,$0083,$0084,$0085,$0086,$0087,$0088,$0089,$008A,$008B,$008C,$008D,$008E,$008F
;		DC.W	$0090,$0091,$0092,$0093,$0094,$0095,$0096,$0097,$0098,$0099,$009A,$009B,$009C,$009D,$009E,$009F
;		DC.W	$00A0,$00A1,$00A2,$00A3,$00A4,$00A5,$00A6,$00A7,$00A8,$00A9,$00AA,$00AB,$00AC,$00AD,$00AE,$00AF
;		DC.W	$00B0,$00B1,$00B2,$00B3,$00B4,$00B5,$00B6,$00B7,$00B8,$00B9,$00BA,$00BB,$00BC,$00BD,$00BE,$00BF
;		DC.W	$00C0,$00C1,$00C2,$00C3,$00C4,$00C5,$00C6,$00C7,$00C8,$00C9,$00CA,$00CB,$00CC,$00CD,$00CE,$00CF
;		DC.W	$00D0,$00D1,$00D2,$00D3,$00D4,$00D5,$00D6,$00D7,$00D8,$00D9,$00DA,$00DB,$00DC,$00DD,$00DE,$00DF
;		DC.W	$00E0,$00E1,$00E2,$00E3,$00E4,$00E5,$00E6,$00E7,$00E8,$00E9,$00EA,$00EB,$00EC,$00ED,$00EE,$00EF
;		DC.W	$00F0,$00F1,$00F2,$00F3,$00F4,$00F5,$00F6,$00F7,$00F8,$00F9,$00FA,$00FB,$00FC,$00FD,$00FE,$00FF
